package com.newcore.ifrs17.fact.olCommission;
import  com.newcore.ifrs17.fact.olCommission.IFRS17DefOlCmIfrs4DueScene;

rule "IFRS17DefOlCmIfrs4DueScene_businessCode_check"
    when ifrs17DefOlCmIfrs4DueScene:IFRS17DefOlCmIfrs4DueScene( businessCode==null || businessCode.trim() == ""|| businessCode.trim().toUpperCase() =="NULL"|| businessCode not matches "^[A-Za-z0-9]{1,10}$")
    then
        ifrs17DefOlCmIfrs4DueScene.setRemark("业务类型代码为空或不符合规则 \n");
    end
rule "IFRS17DefOlCmIfrs4DueScene_businessCodeInsruct_check"
    when ifrs17DefOlCmIfrs4DueScene:IFRS17DefOlCmIfrs4DueScene( businessCodeInsruct==null || businessCodeInsruct.trim() == "")
    then
        ifrs17DefOlCmIfrs4DueScene.setRemark(ifrs17DefOlCmIfrs4DueScene.getRemark()==null?"业务类型说明不符合规则 \n":ifrs17DefOlCmIfrs4DueScene.getRemark()+"业务类型说明不符合规则\n");
    end
rule "IFRS17DefOlCmIfrs4DueScene_accType1_check"
    when ifrs17DefOlCmIfrs4DueScene:IFRS17DefOlCmIfrs4DueScene( accType1==null || accType1.trim() == ""|| accType1 not matches "^[0-9]{8}$")
    then
        ifrs17DefOlCmIfrs4DueScene.setRemark(ifrs17DefOlCmIfrs4DueScene.getRemark()==null?"场景编码不符合规则 \n":ifrs17DefOlCmIfrs4DueScene.getRemark()+"场景编码不符合规则\n");
    end
rule "IFRS17DefOlCmIfrs4DueScene_sceneName_check"
    when ifrs17DefOlCmIfrs4DueScene:IFRS17DefOlCmIfrs4DueScene( sceneName==null || sceneName.trim() == ""|| sceneName.trim().toUpperCase() =="NULL")
    then
        ifrs17DefOlCmIfrs4DueScene.setRemark(ifrs17DefOlCmIfrs4DueScene.getRemark()==null?"场景名称不符合规则 \n":ifrs17DefOlCmIfrs4DueScene.getRemark()+"场景名称不符合规则\n");
    end
rule "IFRS17DefOlCmIfrs4DueScene_commisionType_check"
    when ifrs17DefOlCmIfrs4DueScene:IFRS17DefOlCmIfrs4DueScene( commisionType==null || commisionType.trim() == ""|| commisionType != "ALL" || commisionType not matches "^[0-9]*$")
    then
        ifrs17DefOlCmIfrs4DueScene.setRemark(ifrs17DefOlCmIfrs4DueScene.getRemark()==null?"佣金类型不符合规则 \n":ifrs17DefOlCmIfrs4DueScene.getRemark()+"佣金类型不符合规则\n");
    end