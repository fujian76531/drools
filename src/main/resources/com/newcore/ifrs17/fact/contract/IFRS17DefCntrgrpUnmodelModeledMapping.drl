package com.newcore.ifrs17.fact.contract;
import  com.newcore.ifrs17.fact.contract.IFRS17DefCntrgrpUnmodelModeledMapping;

rule "IFRS17DefCntrgrpUnmodelModeledMapping_polCode_check"
    when ifrs17DefCntrgrpUnmodelModeledMapping:IFRS17DefCntrgrpUnmodelModeledMapping( polCode==null || polCode.trim() == "" ||polCode.trim().toUpperCase() == "NULL" ||polCode not matches("^[A-Za-z0-9_]*$"))
    then
        ifrs17DefCntrgrpUnmodelModeledMapping.setRemark("精算代码为空或不符合规则 \n");
    end

rule "IFRS17DefCntrgrpUnmodelModeledMapping_isAnnuityConversion_check"
    when ifrs17DefCntrgrpUnmodelModeledMapping:IFRS17DefCntrgrpUnmodelModeledMapping(targetPolCode==null || targetPolCode.trim() == "" ||targetPolCode.trim().toUpperCase() == "NULL" ||targetPolCode not matches("^[A-Za-z0-9_]*$"))
    then
        ifrs17DefCntrgrpUnmodelModeledMapping.setRemark(ifrs17DefCntrgrpUnmodelModeledMapping.getRemark()==null?"目标模型产品代码为空或不符合规则 \n":ifrs17DefCntrgrpUnmodelModeledMapping.getRemark()+"目标模型产品代码为空或不符合规则 \n");
    end
rule "IFRS17DefCntrgrpUnmodelModeledMapping_polName_check"
    when ifrs17DefCntrgrpUnmodelModeledMapping:IFRS17DefCntrgrpUnmodelModeledMapping(polName != null && polName.trim() == "")
    then
        ifrs17DefCntrgrpUnmodelModeledMapping.setRemark(ifrs17DefCntrgrpUnmodelModeledMapping.getRemark()==null?"产品名称为空或不符合规则 \n":ifrs17DefCntrgrpUnmodelModeledMapping.getRemark()+"产品名称为空或不符合规则 \n");
    end